name: ðŸš€ Ansible Multi-Host Deploy DVL

on:
  workflow_dispatch:
    inputs:
      instance_count:
        description: 'Number of Servers'
        required: true
        type: choice
        options:
          - '2'
          - '5'
      instance_type:
        description: 'Instance Type'
        required: true
        type: choice
        options:
          - 't2.micro'
          - 't2.small'
      stack_type:
        description: 'Server Stack'
        required: true
        type: choice
        options:
          - 'NGINX'
          - 'Apache'

env:
  AWS_REGION: us-east-1
  UBUNTU_AMI: ami-0c7217cdde317cfec

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Make scripts executable
        run: chmod +x ./scripts/*.sh
      
      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible jq

      - name: Launch Infrastructure
        id: infra
        run: ./scripts/launch-infrastructure.sh
        env:
          INSTANCE_COUNT: ${{ inputs.instance_count }}
          INSTANCE_TYPE: ${{ inputs.instance_type }}
          RUN_ID: ${{ github.run_id }}
          UBUNTU_AMI: ${{ env.UBUNTU_AMI }}

      - name: Create Ansible Files
        run: ./scripts/create-ansible-files.sh
        env:
          STACK_TYPE: ${{ inputs.stack_type }}
          SERVER_IPS: ${{ steps.infra.outputs.all_ips }}

      - name: Wait for SSH
        run: ./scripts/wait-for-ssh.sh
        env:
          SERVER_IPS: ${{ steps.infra.outputs.all_ips }}

      - name: Run Ansible
        run: |
          chmod 600 ansible-key.pem
          ansible-playbook -i inventory.ini playbook.yml -v

      - name: Verify Deployment
        run: ./scripts/verify-deployment.sh
        env:
          SERVER_IPS: ${{ steps.infra.outputs.all_ips }}

      - name: Generate Report
        run: ./scripts/generate-report.sh
        env:
          STACK_TYPE: ${{ inputs.stack_type }}
          INSTANCE_TYPE: ${{ inputs.instance_type }}
          INSTANCE_COUNT: ${{ inputs.instance_count }}
          SERVER_IPS: ${{ steps.infra.outputs.all_ips }}

      - name: Upload Report
        uses: actions/upload-artifact@v4
        with:
          name: deployment-report
          path: report.md
          retention-days: 1
