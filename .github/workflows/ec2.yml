tname: Deploy EC2 Instance

on:
  workflow_dispatch:
    inputs:
      aws_region:
        description: 'AWS Region'
        required: true
        default: 'us-west-2'
      instance_type:
        description: 'Instance Type'
        required: true
        default: 't2.micro'
      image_id:
        description: 'AMI ID'
        required: true
        default: 'ami-0c94755bb95c71c99'
      key_name:
        description: 'SSH Key Name'
        required: true
      security_group_name:
        description: 'Security Group Name'
        required: true
        default: 'allow-ssh'

jobs:

  deploy-ec2:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ github.event.inputs.aws_region }}

    - name: Install Ansible
      run: |
        sudo apt-get update
        sudo apt-get install -y ansible

    - name: Retrieve Subnet ID
      id: subnet
      ansible.builtin.ec2_vpc_subnet_facts:
        region: ${{ github.event.inputs.aws_region }}
        filters:
          "tag:Name": "public"
          "state": "available"
      register: subnets

    - name: Deploy EC2 Instance
      run: |
        ansible-playbook -i localhost, ec2-deploy.yml \
          -e "aws_region=${{ github.event.inputs.aws_region }}" \
          -e "instance_type=${{ github.event.inputs.instance_type }}" \
          -e "image_id=${{ github.event.inputs.image_id }}" \
          -e "key_name=${{ github.event.inputs.key_name }}" \
          -e "security_group_name=${{ github.event.inputs.security_group_name }}" \
          -e "subnet_id=${{ subnets.subnets[0].id }}"
