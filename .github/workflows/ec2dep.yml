name: Deploy EC2 Instance

on:
  workflow_dispatch:
    inputs:
      aws_region:
        description: 'AWS Region'
        required: true
        default: 'us-west-2'
      instance_type:
        description: 'Instance Type'
        required: true
        default: 't2.micro'
      image_id:
        description: 'AMI ID'
        required: true
        default: 'ami-0c94755bb95c71c99'
      key_name:
        description: 'SSH Key Name'
        required: true
      security_group_name:
        description: 'Security Group Name'
        required: true
        default: 'allow-ssh'
      subnet_cidr:
        description: 'Subnet CIDR (e.g., 10.0.1.0/24)'
        required: false
        default: '10.0.1.0/24'

jobs:

  deploy-ec2:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ github.event.inputs.aws_region }}

    - name: Install Ansible
      run: |
        sudo apt-get update
        sudo apt-get install -y ansible

    - name: Retrieve or Create Subnet
      id: subnet
      run: |
        SUBNET_ID=$(ansible-playbook -i localhost, ec2-deploy.yml \
          -e "aws_region=${{ github.event.inputs.aws_region }}" \
          --task-timeout=1800 | grep '"id"' | awk -F'"' '{print $4}')
        if [ -z "$SUBNET_ID" ]; then
          echo "No available subnets found in region ${{ github.event.inputs.aws_region }}"
          echo "Creating a new subnet..."
          SUBNET_ID=$(ansible-playbook -i localhost, ec2-deploy.yml \
            -e "aws_region=${{ github.event.inputs.aws_region }}" \
            -e "subnet_cidr=${{ github.event.inputs.subnet_cidr }}" \
            --task-timeout=1800 | grep '"id"' | awk -F'"' '{print $4}')
          if [ -z "$SUBNET_ID" ]; then
            echo "Failed to create a new subnet."
            exit 1
          fi
        fi
        echo "Subnet ID: $SUBNET_ID"
        echo "::set-output name=subnet_id::$SUBNET_ID"

    - name: Deploy EC2 Instance
      run: |
        ansible-playbook -i localhost, ec2-deploy.yml \
          -e "aws_region=${{ github.event.inputs.aws_region }}" \
          -e "instance_type=${{ github.event.inputs.instance_type }}" \
          -e "image_id=${{ github.event.inputs.image_id }}" \
          -e "key_name=${{ github.event.inputs.key_name }}" \
          -e "security_group_name=${{ github.event.inputs.security_group_name }}" \
          -e "subnet_id=${{ steps.subnet.outputs.subnet_id }}"
      # Catch any errors and provide additional context
      continue-on-error: true
      if: failure()
      run: |
        echo "An error occurred while deploying the EC2 instance."
        echo "Playbook output:"
        cat ec2-deploy.yml.log
        exit 1
