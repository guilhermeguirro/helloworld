name: 🛡️ Security & Infrastructure Setup
on:
  workflow_dispatch:
    inputs:
      security_level:
        description: '🔒 Security Level'
        required: true
        type: choice
        options:
          - standard
          - enhanced
          - fortress
      enable_monitoring:
        description: '📊 Enable Monitoring'
        type: boolean
        default: true
      enable_notifications:
        description: '📧 Enable Email Notifications'
        type: boolean
        default: true
      ssh_port:
        description: '🔌 Custom SSH Port (default: 22)'
        required: true
        default: '22'
      admin_email:
        description: '📧 Admin Email for Notifications'
        required: true
        type: string

jobs:
  security-setup:
    name: 🛡️ Security Configuration
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible==8.5.0 ansible-lint
          ansible --version
          ansible-lint --version
          echo "Python path: $(which python)"
          echo "Ansible path: $(which ansible)"

      - name: Debug directory structure
        run: |
          pwd
          echo "Current directory contents:"
          ls -la
          echo "Creating necessary directories..."
          mkdir -p playbooks/templates
          mkdir -p inventory
          echo "Directory structure after creation:"
          tree .

      - name: Create fail2ban template
        run: |
          echo "Creating fail2ban template..."
          cat > playbooks/templates/fail2ban.conf.j2 << 'ENDOFFILE'
          [DEFAULT]
          bantime = {{ '48h' if security_level == 'fortress' else '24h' if security_level == 'enhanced' else '12h' }}
          findtime = {{ '10m' if security_level == 'fortress' else '30m' }}
          maxretry = {{ '3' if security_level == 'fortress' else '5' if security_level == 'enhanced' else '7' }}
          banaction = iptables-multiport
          mta = sendmail
          protocol = tcp
          chain = INPUT

          [sshd]
          enabled = true
          port = {{ ssh_port }}
          filter = sshd
          logpath = /var/log/auth.log
          maxretry = {{ '2' if security_level == 'fortress' else '3' if security_level == 'enhanced' else '5' }}

          [http-auth]
          enabled = true
          port = http,https
          filter = apache-auth
          logpath = /var/log/apache2/error.log /var/log/nginx/error.log
          maxretry = {{ '3' if security_level == 'fortress' else '5' }}
          ENDOFFILE
          echo "Fail2ban template created. Contents:"
          cat playbooks/templates/fail2ban.conf.j2

      # ... [Previous template creation steps remain the same] ...

      - name: Create Ansible playbook
        run: |
          echo "Creating Ansible playbook..."
          cat > playbooks/security.yml << 'ENDOFFILE'
          ---
          - name: Security Configuration
            hosts: localhost
            become: yes
            vars:
              security_level: "{{ lookup('env', 'INPUT_SECURITY_LEVEL') }}"
              ssh_port: "{{ lookup('env', 'INPUT_SSH_PORT') }}"
              admin_email: "{{ lookup('env', 'INPUT_ADMIN_EMAIL') }}"
              enable_monitoring: "{{ lookup('env', 'INPUT_ENABLE_MONITORING') | bool }}"
              enable_notifications: "{{ lookup('env', 'INPUT_ENABLE_NOTIFICATIONS') | bool }}"
            
            tasks:
              - name: Debug variables
                debug:
                  msg: |
                    Security Level: {{ security_level }}
                    SSH Port: {{ ssh_port }}
                    Admin Email: {{ admin_email }}
                    Monitoring: {{ enable_monitoring }}
                    Notifications: {{ enable_notifications }}

              - name: Show template paths
                debug:
                  msg: |
                    Current working directory: {{ lookup('env', 'PWD') }}
                    Template paths:
                      - templates/fail2ban.conf.j2
                      - templates/sshd_config.j2
                      - templates/security.rules.j2

              - name: Update apt cache
                apt:
                  update_cache: yes
                  cache_valid_time: 3600

              - name: Install security packages
                apt:
                  name:
                    - fail2ban
                    - ufw
                    - unattended-upgrades
                    - rkhunter
                    - auditd
                  state: present

              - name: Configure fail2ban
                template:
                  src: templates/fail2ban.conf.j2
                  dest: /etc/fail2ban/jail.local
                  mode: '0644'
                notify: restart fail2ban

              # ... [Rest of the playbook tasks remain the same] ...
          ENDOFFILE
          echo "Playbook created. Contents:"
          cat playbooks/security.yml

      - name: Create inventory file
        run: |
          echo "Creating inventory file..."
          echo "localhost ansible_connection=local" > inventory/hosts
          echo "Inventory file contents:"
          cat inventory/hosts

      - name: Verify file structure
        run: |
          echo "Final directory structure:"
          tree .
          echo "File permissions:"
          ls -lR playbooks/
          echo "Template contents verification:"
          cat playbooks/templates/fail2ban.conf.j2

      - name: Install tree package
        run: sudo apt-get install -y tree

      - name: Run Ansible playbook with verbose output
        env:
          INPUT_SECURITY_LEVEL: ${{ github.event.inputs.security_level }}
          INPUT_SSH_PORT: ${{ github.event.inputs.ssh_port }}
          INPUT_ADMIN_EMAIL: ${{ github.event.inputs.admin_email }}
          INPUT_ENABLE_MONITORING: ${{ github.event.inputs.enable_monitoring }}
          INPUT_ENABLE_NOTIFICATIONS: ${{ github.event.inputs.enable_notifications }}
        run: |
          echo "Environment variables:"
          env | grep INPUT_
          echo "Running Ansible playbook..."
          ANSIBLE_DEBUG=1 ansible-playbook -i inventory/hosts playbooks/security.yml -vvv

      - name: Debug on failure
        if: failure()
        run: |
          echo "Debug information on failure:"
          echo "Python version:"
          python --version
          echo "Ansible version:"
          ansible --version
          echo "Directory structure:"
          tree .
          echo "Playbook location:"
          find . -name "security.yml"
          echo "Template locations:"
          find . -name "*.j2"

      - name: Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security_report.txt
          retention-days: 30

      - name: Show completion message
        run: |
          echo "🎉 Security setup completed successfully!"
          echo "Security Level: ${{ github.event.inputs.security_level }}"
          echo "Check the security report for details."
